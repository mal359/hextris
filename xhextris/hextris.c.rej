*** hextris.c	Mon Apr  5 19:55:55 1993
--- hextris.c	Fri Apr 27 10:46:29 1990
***************
*** 33,62 ****
  /* This places the piece on the board in its starting position. All the
   * hexes in the piece are displayed.
   */
! init_piece(piece, upos)
! piece_t *piece; int upos;
  {
      int base, form, i;
      base = (piece->column % 2) ? 0 : 8;
      form = piece->type * 6 + piece->rotation;
  
!     if (upos)
!       redraw_position();
!     for (i = 0; i < 7; i += 2) {
        draw_hex(piece->row+shape[form][base+i],
  		 piece->column+shape[form][base+1+i],1,piece->type);
-       if (upos)
- 	draw_pos(piece->column+shape[form][base+1+i],1,piece->type);
-     }
- }
- 
- redraw_position()
- {
-   int i;
- 
-   for (i = 0; i < MAXCOLUMN; i++)
-     draw_hex(MAXROW + 2, i, 0, 10);
- 
  }
  
  /* This places the piece in its new position. This is done by comparing
--- 33,48 ----
  /* This places the piece on the board in its starting position. All the
   * hexes in the piece are displayed.
   */
! init_piece(piece)
! piece_t *piece;
  {
      int base, form, i;
      base = (piece->column % 2) ? 0 : 8;
      form = piece->type * 6 + piece->rotation;
  
!     for (i = 0; i < 7; i += 2)
        draw_hex(piece->row+shape[form][base+i],
  		 piece->column+shape[form][base+1+i],1,piece->type);
  }
  
  /* This places the piece in its new position. This is done by comparing
***************
*** 65,86 ****
   * any hexes that will be covered. In this way, any piece that is already
   * covered, and will be covered, is not redrawn.
   */
! place_piece(piece,tpiece,upos)
! piece_t *piece, *tpiece; int upos;
  {
      int base, form, tbase, tform, i, j, diff;
-     int pos[MAXCOLUMN];
      base = (piece->column % 2) ? 0 : 8;
      form = piece->type * 6 + piece->rotation;
      tbase = (tpiece->column % 2) ? 0 : 8;
      tform = tpiece->type * 6 + tpiece->rotation;
! 
!     if (upos) {
!       for (i = 0; i < MAXCOLUMN; i++)
! 	pos[i] = 0;
!       redraw_position();
!     }
! 
      for (i = 0; i < 7; i += 2) {
  	for (j = 0; j < 7; j += 2) {
  	    diff = 1;
--- 51,65 ----
   * any hexes that will be covered. In this way, any piece that is already
   * covered, and will be covered, is not redrawn.
   */
! place_piece(piece,tpiece)
! piece_t *piece, *tpiece;
  {
      int base, form, tbase, tform, i, j, diff;
      base = (piece->column % 2) ? 0 : 8;
      form = piece->type * 6 + piece->rotation;
      tbase = (tpiece->column % 2) ? 0 : 8;
      tform = tpiece->type * 6 + tpiece->rotation;
!     
      for (i = 0; i < 7; i += 2) {
  	for (j = 0; j < 7; j += 2) {
  	    diff = 1;
***************
*** 95,106 ****
  	if (diff)
  	  draw_hex(tpiece->row+shape[tform][tbase+i],
  		     tpiece->column+shape[tform][tbase+1+i],1,tpiece->type);
- 	if (upos) {
- 	  if (!pos[i]) {
- 	    draw_pos(tpiece->column+shape[tform][tbase+1+i],1,tpiece->type);
- 	    pos[i] = 1;
- 	  }
- 	}
      }
  
      for (i = 0; i < 7; i += 2) {
--- 74,79 ----
  	if (diff)
  	  draw_hex(tpiece->row+shape[tform][tbase+i],
  		     tpiece->column+shape[tform][tbase+1+i],1,tpiece->type);
      }
  
      for (i = 0; i < 7; i += 2) {
***************
*** 309,321 ****
      case 0:
  	tpiece.column--;
  	if (! check_piece(&tpiece,grid)) {
! 	    place_piece(piece,&tpiece, 1);
  	    piece->column = tpiece.column;
  	    piece->row = tpiece.row;
  	} else {
  	    tpiece.row -= (1-((piece->column & 1)*2));
  	    if (! check_piece(&tpiece,grid)) {
! 		place_piece(piece,&tpiece, 1);
  		piece->column = tpiece.column;
  		piece->row = tpiece.row;
  	    }
--- 282,294 ----
      case 0:
  	tpiece.column--;
  	if (! check_piece(&tpiece,grid)) {
! 	    place_piece(piece,&tpiece);
  	    piece->column = tpiece.column;
  	    piece->row = tpiece.row;
  	} else {
  	    tpiece.row -= (1-((piece->column & 1)*2));
  	    if (! check_piece(&tpiece,grid)) {
! 		place_piece(piece,&tpiece);
  		piece->column = tpiece.column;
  		piece->row = tpiece.row;
  	    }
***************
*** 324,336 ****
      case 1:
  	tpiece.column++;
  	if (! check_piece(&tpiece,grid)) {
! 	    place_piece(piece,&tpiece, 1);
  	    piece->column = tpiece.column;
  	    piece->row = tpiece.row;
  	} else {
  	    tpiece.row -= (1-((piece->column & 1)*2));
  	    if (! check_piece(&tpiece,grid)) {
! 		place_piece(piece,&tpiece, 1);
  		piece->column = tpiece.column;
  		piece->row = tpiece.row;
  	    }
--- 297,309 ----
      case 1:
  	tpiece.column++;
  	if (! check_piece(&tpiece,grid)) {
! 	    place_piece(piece,&tpiece);
  	    piece->column = tpiece.column;
  	    piece->row = tpiece.row;
  	} else {
  	    tpiece.row -= (1-((piece->column & 1)*2));
  	    if (! check_piece(&tpiece,grid)) {
! 		place_piece(piece,&tpiece);
  		piece->column = tpiece.column;
  		piece->row = tpiece.row;
  	    }
***************
*** 340,346 ****
  	tpiece.rotation++;
  	tpiece.rotation = (tpiece.rotation > 5) ? 0 : tpiece.rotation;
  	if (! check_piece(&tpiece,grid)) {
! 	    place_piece(piece,&tpiece, 1);
  	    piece->rotation = tpiece.rotation;
  	    piece->column = tpiece.column;
  	    piece->row = tpiece.row;
--- 313,319 ----
  	tpiece.rotation++;
  	tpiece.rotation = (tpiece.rotation > 5) ? 0 : tpiece.rotation;
  	if (! check_piece(&tpiece,grid)) {
! 	    place_piece(piece,&tpiece);
  	    piece->rotation = tpiece.rotation;
  	    piece->column = tpiece.column;
  	    piece->row = tpiece.row;
***************
*** 350,356 ****
  	tpiece.rotation--;
  	tpiece.rotation = (tpiece.rotation < 0) ? 5 : tpiece.rotation;
  	if (! check_piece(&tpiece,grid)) {
! 	    place_piece(piece,&tpiece, 1);
  	    piece->rotation = tpiece.rotation;
  	    piece->column = tpiece.column;
  	    piece->row = tpiece.row;
--- 323,329 ----
  	tpiece.rotation--;
  	tpiece.rotation = (tpiece.rotation < 0) ? 5 : tpiece.rotation;
  	if (! check_piece(&tpiece,grid)) {
! 	    place_piece(piece,&tpiece);
  	    piece->rotation = tpiece.rotation;
  	    piece->column = tpiece.column;
  	    piece->row = tpiece.row;
***************
*** 359,365 ****
      case 4:
  	tpiece.row++;
  	while (! check_piece(&tpiece,grid)) {
! 	    place_piece(piece,&tpiece,0);
  	    piece->row++;
  	    tpiece.row++;
  	    *score += 10;
--- 332,338 ----
      case 4:
  	tpiece.row++;
  	while (! check_piece(&tpiece,grid)) {
! 	    place_piece(piece,&tpiece);
  	    piece->row++;
  	    tpiece.row++;
  	    *score += 10;
***************
*** 399,410 ****
  	display_scores(score,rows);
  	game_over =  (piece->row < 2) ? 1 : 0;
  	new_piece(npiece,piece);
! 	init_piece(piece, 1);
  	show_next_piece(npiece);
      } else {
  	tpiece.row--;
  	piece->row++;
! 	place_piece(&tpiece,piece, 0);
  	game_over = 0;
      }
      return game_over;
--- 372,383 ----
  	display_scores(score,rows);
  	game_over =  (piece->row < 2) ? 1 : 0;
  	new_piece(npiece,piece);
! 	init_piece(piece);
  	show_next_piece(npiece);
      } else {
  	tpiece.row--;
  	piece->row++;
! 	place_piece(&tpiece,piece);
  	game_over = 0;
      }
      return game_over;
***************
*** 427,433 ****
      new_piece(npiece,piece);
      *score = 0;
      *rows = 0;
!     init_piece(piece, 1);
      show_next_piece(npiece);
  }
  
--- 400,406 ----
      new_piece(npiece,piece);
      *score = 0;
      *rows = 0;
!     init_piece(piece);
      show_next_piece(npiece);
  }
  
***************
*** 472,479 ****
  		high_scores[j].score = high_scores[j+1].score;
  		high_scores[j].rows = high_scores[j+1].rows;
  	    }
! 	    strcpy(high_scores[MAXHIGHSCORES-1].name, "nobody");
! 	    strcpy(high_scores[MAXHIGHSCORES-1].userid, "NON");
  	    high_scores[MAXHIGHSCORES-1].score = 0;
  	    high_scores[MAXHIGHSCORES-1].rows = 0;
  	    i--;
--- 445,452 ----
  		high_scores[j].score = high_scores[j+1].score;
  		high_scores[j].rows = high_scores[j+1].rows;
  	    }
! 	    strcpy(high_scores[MAXHIGHSCORES-1].name, "David Markley");
! 	    strcpy(high_scores[MAXHIGHSCORES-1].userid, "CMU");
  	    high_scores[MAXHIGHSCORES-1].score = 0;
  	    high_scores[MAXHIGHSCORES-1].rows = 0;
  	    i--;
***************
*** 505,517 ****
   * I/O handler supplies it.
   */
  do_choice(choice,grid,npiece,piece,score,rows,game_over,game_view,high_scores)
! char *choice;
  position_t grid[MAXROW][MAXCOLUMN];
  piece_t *npiece,*piece;
  int *score, *rows, *game_over, *game_view;
  high_score_t high_scores[MAXHIGHSCORES];
  {
!     switch (choice[0]) {
      case 'j': case 'J': case '4':
  	if (! *game_over)
  	  update(0,grid,npiece,piece,score,rows);
--- 478,490 ----
   * I/O handler supplies it.
   */
  do_choice(choice,grid,npiece,piece,score,rows,game_over,game_view,high_scores)
! char choice;
  position_t grid[MAXROW][MAXCOLUMN];
  piece_t *npiece,*piece;
  int *score, *rows, *game_over, *game_view;
  high_score_t high_scores[MAXHIGHSCORES];
  {
!     switch (choice) {
      case 'j': case 'J': case '4':
  	if (! *game_over)
  	  update(0,grid,npiece,piece,score,rows);
***************
*** 544,550 ****
  	if (! *game_over) {
  	    *game_over = 2;
  	    display_high_scores(high_scores);
! 	    display_help_score();
  	}
  	break;
      case 'u': case 'U':
--- 517,523 ----
  	if (! *game_over) {
  	    *game_over = 2;
  	    display_high_scores(high_scores);
! 	    display_help();
  	}
  	break;
      case 'u': case 'U':
***************
*** 576,599 ****
  #ifdef LOG
  	loguse(LOGHOST,"xhexlog",log_message);
  #endif
-       case '\024':
- 	if (strcmp(choice, "\024[A") == 0) {
- 	  if (! *game_over)
- 	    update(3,grid,npiece,piece,score,rows);
- 	}
- 	else if (strcmp(choice, "\024[B") == 0) {
- 	  if (! *game_over)
- 	    update(0,grid,npiece,piece,score,rows);
- 	}
- 	else if (strcmp(choice, "\024[C") == 0) {
- 	  if (! *game_over)
- 	    update(1,grid,npiece,piece,score,rows);
- 	}
- 	else if (strcmp(choice, "\024[D") == 0) {
- 	  if (! *game_over)
- 	    update(2,grid,npiece,piece,score,rows);
- 	}
- 	break;
      }
  }
  
--- 549,554 ----
  #ifdef LOG
  	loguse(LOGHOST,"xhexlog",log_message);
  #endif
      }
  }
  
***************
*** 608,614 ****
      if (! game_view) {
  	redraw_grid(grid);
  	draw_borders();
! 	init_piece(piece, 1);
  	display_scores(score,rows);
  	display_help();
  	show_next_piece(npiece);
--- 563,569 ----
      if (! game_view) {
  	redraw_grid(grid);
  	draw_borders();
! 	init_piece(piece);
  	display_scores(score,rows);
  	display_help();
  	show_next_piece(npiece);
***************
*** 615,621 ****
      } else {
  	if (read_high_scores(high_scores))
  	  display_high_scores(high_scores);
! 	display_help_score();
! /*	display_scores(score,rows);*/
      }
  }
--- 570,576 ----
      } else {
  	if (read_high_scores(high_scores))
  	  display_high_scores(high_scores);
! 	display_help();
! 	display_scores(score,rows);
      }
  }
